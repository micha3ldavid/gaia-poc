@charset "UTF-8";

/* http://meyerweb.com/eric/tools/css/reset/
   v2.0 | 20110126
   License: none (public domain)
*/

html,
body,
div,
span,
applet,
object,
iframe,
h1,
h2,
h3,
h4,
h5,
h6,
p,
blockquote,
pre,
a,
abbr,
acronym,
address,
big,
cite,
code,
del,
dfn,
em,
img,
ins,
kbd,
q,
s,
samp,
small,
strike,
strong,
sub,
sup,
tt,
var,
b,
u,
i,
center,
dl,
dt,
dd,
ol,
ul,
li,
fieldset,
form,
label,
legend,
table,
caption,
tbody,
tfoot,
thead,
tr,
th,
td,
article,
aside,
canvas,
details,
embed,
figure,
figcaption,
footer,
header,
hgroup,
main,
menu,
nav,
output,
ruby,
section,
summary,
time,
mark,
audio,
video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

/* HTML5 display-role reset for older browsers */

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section {
  display: block;
}

body {
  line-height: 1;
}

ol,
ul {
  list-style: none;
}

blockquote,
q {
  quotes: none;
}

blockquote:before,
blockquote:after,
q:before,
q:after {
  content: '';
  content: none;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

.clearfix {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
}

.clearfix:after {
  content: " ";
  display: block;
  clear: both;
}

.pull-left {
  float: left !important;
}

.pull-right {
  float: right !important;
}

html,
body,
input,
textarea,
button,
select,
a,
h1,
h2,
h3,
h4,
h5,
h6 {
  color: #4a4a4a;
  font-family: Montserrat;
  font-size: 1rem;
  font-weight: 300;
  line-height: 1.4;
  outline: 0;
}

h1,
.h1 {
  font-size: 2.2rem;
}

h2,
.h2 {
  font-size: 2rem;
}

h3,
.h3 {
  font-size: 1.8rem;
}

h4,
.h4 {
  font-size: 1.4rem;
}

h5,
.h5 {
  font-size: 1rem;
}

h6,
.h6 {
  font-size: 0.8rem;
}

a {
  color: #44576b;
  text-decoration: none;
  transition: color 0.5s;
}

a:hover,
a:active,
a:focus {
  outline: 0;
  color: #92a3b3;
}

a.active {
  color: #ff5548;
}

button {
  cursor: pointer;
}

.text-accent {
  color: #00c9c9;
}

@font-face {
  font-family: 'icons';
  src: url(fonts/icons.eot);
  src: url(fonts/icons.eot) format("embedded-opentype"), url(fonts/icons.woff2) format("woff2"), url(fonts/icons.woff) format("woff"), url(fonts/icons.ttf) format("truetype"), url(fonts/icons.svg) format("svg");
  font-weight: normal;
  font-style: normal;
}

.icon:before {
  font-family: "icons";
  font-style: normal;
  font-weight: normal;
  speak: none;
  display: inline-block;
  text-decoration: inherit;
  width: 1em;
  margin-right: .2em;
  text-align: center;
  /* opacity: .8; */
  /* For safety - reset parent styles, that can break glyph codes*/
  font-variant: normal;
  text-transform: none;
  /* fix buttons height, for twitter bootstrap */
  line-height: 1em;
  /* Animation center compensation - margins should be symmetric */
  /* remove if not needed */
  margin-left: .2em;
  /* you can be more comfortable with increased icons size */
  /* font-size: 120%; */
  /* Font smoothing. That was taken from TWBS */
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  /* Uncomment for 3D effect */
  /* text-shadow: 1px 1px 1px rgba(127, 127, 127, 0.3); */
}

.icon-thumbs-up:before {
  content: '\E800';
}

.icon-search:before {
  content: '\E801';
}

.icon-forward:before {
  content: '\E802';
}

.icon-angle-up:before {
  content: '\F106';
}

.icon-angle-down:before {
  content: '\F107';
}

.icon-user-circle:before {
  content: '\F2BD';
}

.icon-lg.icon,
.icon-lg .icon {
  font-size: 2rem;
}

.icon-lg .icon-label {
  position: relative;
  top: -0.3rem;
}

.icon-rotate {
  position: absolute;
  transform: rotate(90deg);
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  border: 0;
}

.navbar {
  position: relative;
}

.navbar-header {
  border-bottom: 1px solid #d1d9e2;
  padding: 15px 3.44828%;
  position: relative;
}

.navbar-title {
  line-height: 1;
}

.navbar-logo {
  margin-left: 50px;
}

@media screen and (min-width: 819px) {
  .navbar-logo {
    margin-left: 0;
  }
}

.navbar-actions {
  position: absolute;
  right: 3.44828%;
  top: 50%;
  transform: translateY(-50%);
}

.navbar-footer {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  background-color: #f4f5f6;
  padding: 0 3.44828%;
}

.navbar-footer:after {
  content: " ";
  display: block;
  clear: both;
}

.navbar-nav {
  width: 74.57627%;
  float: left;
  margin-right: 1.69492%;
  display: none;
  font-size: 0.8rem;
  margin: 0;
}

@media screen and (min-width: 819px) {
  .navbar-nav {
    display: block;
  }
}

.navbar-search {
  margin: 0;
  padding: 9px 0;
}

@media screen and (min-width: 819px) {
  .navbar-search {
    width: 23.72881%;
    float: right;
    margin-right: 0;
  }
}

.navbar-mobile {
  width: 100%;
}

@media screen and (min-width: 819px) {
  .navbar-mobile {
    display: none;
  }
}

.navbar-mobile .hamburger {
  left: 3.44828%;
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
}

.navbar-mobile-nav {
  background: #fff;
  bottom: 0;
  top: 118px;
  position: fixed;
  transition: opacity 0.5s;
  left: -100%;
  opacity: 0;
  width: 100%;
  z-index: 2;
}

.navbar-mobile-nav[aria-hidden="false"] {
  left: 0;
  opacity: 1;
}

@media screen and (min-width: 819px) {
  .navbar-mobile-nav[aria-hidden="false"] {
    left: -100%;
    opacity: 0;
  }
}

.navbar-mobile-nav .nav {
  display: block;
}

.navbar-mobile-nav .nav .nav-item {
  float: none;
  border-bottom: 1px solid #d1d9e2;
}

.navbar-mobile-nav .nav .nav-item:first-child .nav-link,
.navbar-mobile-nav .nav .nav-link {
  padding: 2.5641% 3.44828%;
}

.nav {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
}

.nav:after {
  content: " ";
  display: block;
  clear: both;
}

.nav-item {
  float: left;
}

.nav-item:first-child .nav-link {
  padding-left: 0;
}

.nav-item:last-child .nav-link {
  padding-right: 0;
}

.nav-link {
  display: block;
  font-size: 0.8rem;
  padding: 18px 8px;
  text-transform: uppercase;
}

.input-search {
  border: 1px solid #d1d9e2;
  position: relative;
}

.input-search-input,
.input-search-button {
  background-color: transparent;
  border: 0;
  box-sizing: border-box;
  color: #44576b;
  padding: 5px 30px 5px 10px;
}

.input-search-input {
  width: 100%;
}

.input-search-button {
  padding-right: 10px;
  position: absolute;
  right: 0;
  top: 0;
}

.hamburger {
  background: transparent;
  border: 0;
  height: 25px;
  padding: 0;
  position: relative;
  width: 25px;
}

.hamburger:before,
.hamburger:after {
  content: "";
  border-top: 3px solid #44576b;
  width: 100%;
  display: block;
  position: absolute;
  transition: transform 0.25s, border-color 0.5s;
  transform-origin: left center;
}

.hamburger:before {
  border-bottom: 3px solid #44576b;
  height: 6px;
  left: 0;
  top: 2px;
}

.hamburger:after {
  height: 0;
  left: 0;
  bottom: 2px;
}

.hamburger.active:before {
  border-bottom-color: white;
  border-bottom-width: 0;
  height: 0;
  transform: rotate(45deg);
}

.hamburger.active:after {
  transform: rotate(-45deg);
}

.banner {
  background: #44576b;
  padding-top: 63%;
  overflow: hidden;
  position: relative;
}

.banner-heros,
.banner-hero,
.banner-hero-img {
  bottom: 0;
  position: absolute;
  width: 100%;
  top: 0;
  left: 0;
}

.banner-hero {
  display: none;
}

.banner-hero-sm {
  display: block;
}

.banner-hero-img {
  background-size: cover;
  background-repeat: no-repeat;
}

.banner-content {
  color: #fff;
  box-sizing: border-box;
  font-size: 80%;
  line-height: 1.6;
  position: absolute;
  text-align: center;
  top: 50%;
  padding: 5.26316%;
  transform: translateY(-50%);
  width: 100%;
}

@media screen and (min-width: 819px) {
  .banner-content {
    text-align: left;
    font-size: 100%;
  }
}

.banner-heading {
  font-size: 2.2rem;
  text-transform: uppercase;
}

@media screen and (min-width: 550px) {
  .banner {
    padding-top: 37%;
  }

  .banner-hero-sm,
  .banner-hero-lg {
    display: none;
  }

  .banner-hero-md {
    display: block;
  }
}

@media screen and (min-width: 819px) {
  .banner {
    padding-top: 37%;
  }

  .banner-hero-sm,
  .banner-hero-md {
    display: none;
  }

  .banner-hero-lg {
    display: block;
  }
}

.panel {
  position: relative;
}

.panel-heading,
.panel-body,
.panel-footer,
.panel-controls {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  padding: 3.44828%;
}

.panel-heading:after,
.panel-body:after,
.panel-footer:after,
.panel-controls:after {
  content: " ";
  display: block;
  clear: both;
}

.panel-footer {
  text-align: center;
}

.panel-videolist .panel-filter {
  text-align: center;
}

@media screen and (min-width: 819px) {
  .panel-videolist .panel-filter {
    float: right;
    text-align: left;
  }
}

.panel-videolist .panel-filter-title {
  font-size: 0.8rem;
  text-transform: uppercase;
}

.btn {
  background-color: #44576b;
  border: 0;
  color: #fff;
  padding: 10px;
  text-transform: uppercase;
}

.btn.btn-bar {
  min-width: 300px;
  text-align: center;
}

.btn:disabled {
  background: #d1d9e2;
  cursor: default;
}

.card-list {
  max-width: 100%;
  margin-left: auto;
  margin-right: auto;
  display: -ms-flex;
  display: -webkit-flex;
  display: flex;
  flex-wrap: wrap;
  margin: 3.44828% 0;
}

.card-list:after {
  content: " ";
  display: block;
  clear: both;
}

.card-list-item {
  margin-bottom: 3.44828%;
}

@media screen and (min-width: 550px) {
  .card-list {
    margin-right: -15px;
    margin-left: -15px;
  }

  .card-list .card-list-item {
    flex: 1 0 calc(50% - 15px);
    margin-left: 15px;
  }
}

@media screen and (min-width: 819px) {
  .card-list .card-list-item {
    flex: 1 0 calc(33.3% - 15px);
  }
}

@media screen and (min-width: 1080px) {
  .card-list .card-list-item {
    flex: 1 0 calc(25% - 15px);
    margin-left: 15px;
  }
}

.card {
  box-sizing: border-box;
}

.card-img img {
  width: 100%;
}

.card-subtitle {
  color: #92a3b3;
  font-size: 0.8rem;
  font-style: italic;
  margin-bottom: 5px;
}

.card-title {
  font-size: 1rem;
}

.card-body {
  padding: 7.5px 0;
  position: relative;
}

.card-likes {
  color: #92a3b3;
  font-size: 1rem;
  position: absolute;
  top: 7.5px;
  right: 0;
}

.card-meta {
  color: #92a3b3;
  font-size: 0.8rem;
}

.card-meta-season,
.card-meta-duration,
.card-meta-episode {
  display: inline-block;
}

.card-meta-episode {
  padding-right: 3.44828%;
}

.card-meta-duration {
  display: block;
}

.error {
  color: red;
  display: block;
  font-size: 1rem;
  font-style: italic;
  padding: 3.44828%;
}

/*
//
// mk-selectmenu
// --------------------
*/

.mk-sm-root {
  display: inline-block;
  position: relative;
}

.mk-sm {
  display: none;
}

.mk-sm-root.device .mk-sm {
  background: transparent;
  /* bug fix for positioning selects */
  display: inline-block;
  top: 0;
  left: 0;
  bottom: 0;
  opacity: 0;
  position: absolute;
  width: 100%;
  z-index: 2;
}

.mk-sm-shadow {
  display: inline-block;
  position: relative;
}

.mk-sm-trigger {
  background: transparent;
  color: #333;
  border-bottom: 1px solid #00c9c9;
  position: relative;
}

.mk-sm-trigger[aria-expanded="true"],
.mk-sm-trigger.focus {
  color: #00c9c9;
  border-color: #00c9c9;
}

.mk-sm-trigger.disabled {
  color: #4a4a4a;
  border-color: #4a4a4a;
}

.mk-sm-shadow.transitions .mk-sm-trigger {
  transition: all 0.5s;
  -webkit-transition: all 0.5s;
}

.mk-sm-trigger:before {
  content: "\203A";
  font-size: 18px;
  height: 30px;
  line-height: 30px;
  position: absolute;
  right: 1rem;
  top: calc(50% - 1.5rem);
  transform: rotate(90deg);
}

.mk-sm-input {
  background: transparent;
  border: 0;
  cursor: pointer;
  outline: none;
  padding: 0.625rem;
  position: relative;
  z-index: 1;
}

.mk-sm-list {
  background: #d1d9e2;
  border-top: 1px solid #00c9c9;
  box-shadow: 0 0 1.5rem rgba(0, 0, 0, 0.4);
  display: none;
  opacity: 0;
  margin: 0;
  padding: 0;
  min-width: 100%;
  position: absolute;
  top: 100%;
  z-index: 2;
}

.mk-sm-list.transition {
  display: block;
  transition: all 0.5s;
  -webkit-transition: all 0.5s;
}

.mk-sm-list[aria-hidden="false"] {
  display: block;
  opacity: 1;
}

.mk-sm-item {
  list-style: none;
}

.mk-sm-option,
.mk-sm-optgroup {
  background: tranparent;
  color: #4a4a4a;
  display: block;
  font-size: 1.5rem;
  padding: 0.625rem;
  position: relative;
}

.mk-sm-list.transition .mk-sm-option,
.mk-sm-list.transition .mk-sm-optgroup {
  cursor: default;
}

.mk-sm-option:hover,
.mk-sm-optgroup:hover,
.mk-sm-option:active,
.mk-sm-optgroup:active,
.mk-sm-option:focus,
.mk-sm-optgroup:focus {
  background: transparent;
  color: #4a4a4a;
  text-decoration: none;
}

.mk-sm-shadow.transitions .mk-sm-option,
.mk-sm-shadow.transitions .mk-sm-optgroup {
  transition: background 0.5s;
  -webkit-transition: background 0.5s;
}

.mk-sm-option.active,
.mk-sm-optgroup.active {
  color: #4a4a4a;
  background: #92a3b3;
}

.mk-sm-optgroup {
  font-weight: bold;
}

.mk-sm-optgroup[role="presentation"] {
  cursor: default;
}

.mk-sm-optgroup[role="presentation"]:hover {
  cursor: default;
  color: #4a4a4a;
  background: inherit;
}

.mk-sm-option[aria-selected="true"]:after {
  color: #00c9c9;
  content: "";
  font-size: 2rem;
  position: absolute;
  top: 0;
  right: 1rem;
}

.mk-sm-option[aria-disabled="true"] {
  background: transparent;
  color: #92a3b3;
  cursor: default;
}

.mk-sm-removable {
  background: #92a3b3;
  border-top: 1px solid #5c738a;
}

.mk-sm-removable.active {
  background: #5c738a;
}

.mk-sm-alt {
  display: block;
  font-size: 80%;
}

.mk-sm-removable .mk-sm-alt {
  display: inline-block;
  margin-left: 1rem;
}

/*
//
// mk-ld
// --------------------
*/

.mk-ld {
  position: relative;
}

.mk-ld-overlay {
  background: rgba(255, 255, 255, 0.7);
  bottom: 0;
  left: 0;
  position: absolute;
  right: 0;
  text-align: center;
  top: 0;
  opacity: 0;
}

.mk-ld-overlay.transition {
  transition: opacity 0.5s;
}

.mk-ld-overlay.in {
  opacity: 1;
}

.mk-ld-alert,
.mk-ld-focus {
  border: 0;
  clip: rect(0, 0, 0, 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.mk-ld-overlay.default:after {
  color: #00c9c9;
  font-size: 12px;
  margin: 100px auto;
  width: 12px;
  height: 12px;
  border-radius: 50%;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -6px;
  margin-left: -6px;
  text-indent: -9999em;
  animation: mk-default 1.5s infinite linear;
  transform: translateZ(0);
  content: "";
}

@keyframes mk-default {
  0%, 100% {
    box-shadow: 0 -3em 0 0.2em, 2em -2em 0 0em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 0;
  }

  12.5% {
    box-shadow: 0 -3em 0 0, 2em -2em 0 0.2em, 3em 0 0 0, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;
  }

  25% {
    box-shadow: 0 -3em 0 -0.5em, 2em -2em 0 0, 3em 0 0 0.2em, 2em 2em 0 0, 0 3em 0 -1em, -2em 2em 0 -1em, -3em 0 0 -1em, -2em -2em 0 -1em;
  }

  37.5% {
    box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 0, 2em 2em 0 0.2em, 0 3em 0 0em, -2em 2em 0 -1em, -3em 0em 0 -1em, -2em -2em 0 -1em;
  }

  50% {
    box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 0em, 0 3em 0 0.2em, -2em 2em 0 0, -3em 0em 0 -1em, -2em -2em 0 -1em;
  }

  62.5% {
    box-shadow: 0 -3em 0 -1em, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 0, -2em 2em 0 0.2em, -3em 0 0 0, -2em -2em 0 -1em;
  }

  75% {
    box-shadow: 0em -3em 0 -1em, 2em -2em 0 -1em, 3em 0em 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0.2em, -2em -2em 0 0;
  }

  87.5% {
    box-shadow: 0em -3em 0 0, 2em -2em 0 -1em, 3em 0 0 -1em, 2em 2em 0 -1em, 0 3em 0 -1em, -2em 2em 0 0, -3em 0em 0 0, -2em -2em 0 0.2em;
  }
}

.mk-ld-overlay.windows:after {
  animation: mk-windows 1s infinite ease-in-out;
  background-color: #00c9c9;
  content: "";
  height: 50px;
  left: 50%;
  margin-left: -25px;
  margin-top: -25px;
  position: absolute;
  top: 50%;
  width: 50px;
}

@keyframes mk-windows {
  0% {
    transform: perspective(120px) rotateX(0deg) rotateY(0deg);
    -webkit-transform: perspective(120px) rotateX(0deg) rotateY(0deg);
  }

  50% {
    transform: perspective(120px) rotateX(-180.1deg) rotateY(0deg);
    -webkit-transform: perspective(120px) rotateX(-180.1deg) rotateY(0deg);
    background: #009696;
  }

  100% {
    transform: perspective(120px) rotateX(-180deg) rotateY(-179.9deg);
    -webkit-transform: perspective(120px) rotateX(-180deg) rotateY(-179.9deg);
  }
}

.mk-ld-overlay.samsung .disk {
  background: #00c9c9;
  border-radius: 50%;
  height: 3rem;
  left: calc(50% - 1rem);
  position: absolute;
  top: calc(50% - 1rem);
  width: 3rem;
}

.mk-ld-overlay.samsung .disk-0 {
  animation: mk-samsung-0 1.5s infinite;
}

.mk-ld-overlay.samsung .disk-1 {
  animation: mk-samsung-1 1.5s infinite;
}

.mk-ld-overlay.samsung .disk-2 {
  animation: mk-samsung-2 1.5s infinite;
}

.mk-ld-overlay.samsung .disk-3 {
  animation: mk-samsung-3 1.5s infinite;
}

.mk-ld-overlay.samsung .disk-4 {
  animation: mk-samsung-4 1.5s infinite;
}

.mk-ld-overlay.samsung .disk-5 {
  animation: mk-samsung-5 1.5s infinite;
}

@keyframes mk-samsung-0 {
  25% {
    transform: translateX(-1.5rem) scale(0.75);
  }

  50% {
    transform: translateX(-4.5rem) scale(0.6);
  }

  75% {
    transform: translateX(-7.5rem) scale(0.5);
  }

  95% {
    transform: translateX(0rem) scale(1);
  }
}

@keyframes mk-samsung-1 {
  25% {
    transform: translateX(-1.5rem) scale(0.75);
  }

  50%, 75% {
    transform: translateX(-4.5rem) scale(0.6);
  }

  95% {
    transform: translateX(0rem) scale(1);
  }
}

@keyframes mk-samsung-2 {
  25%, 75% {
    transform: translateX(-1.5rem) scale(0.75);
  }

  95% {
    transform: translateX(0rem) scale(1);
  }
}

@keyframes mk-samsung-3 {
  25%, 75% {
    transform: translateX(1.5rem) scale(0.75);
  }

  95% {
    transform: translateX(0rem) scale(1);
  }
}

@keyframes mk-samsung-4 {
  25% {
    transform: translateX(1.5rem) scale(0.75);
  }

  50%, 75% {
    transform: translateX(4.5rem) scale(0.6);
  }

  95% {
    transform: translateX(0rem) scale(1);
  }
}

@keyframes mk-samsung-5 {
  25% {
    transform: translateX(1.5rem) scale(0.75);
  }

  50% {
    transform: translateX(4.5rem) scale(0.6);
  }

  75% {
    transform: translateX(7.5rem) scale(0.5);
  }

  95% {
    transform: translateX(0rem) scale(1);
  }
}

.mk-ld-overlay.spincycle .spincycle-inner {
  background: linear-gradient(to right, #00c9c9 10%, transparent 42%);
  text-indent: -9999em;
  width: 50px;
  height: 50px;
  border-radius: 50%;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-left: -25px;
  margin-top: -25px;
  animation: mk-spincycle 1s infinite linear;
  transform: translateZ(0);
}

.mk-ld-overlay .spincycle-inner:before {
  width: 50%;
  height: 50%;
  background: #00c9c9;
  border-radius: 100% 0 0 0;
  position: absolute;
  top: 0;
  left: 0;
  content: '';
}

.mk-ld-overlay .spincycle-inner:after {
  background: #ffffff;
  width: 75%;
  height: 75%;
  border-radius: 50%;
  content: '';
  margin: auto;
  position: absolute;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
}

@keyframes mk-spincycle {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

.mk-ld-overlay .bubble-inner {
  width: 50px;
  height: 50px;
  top: 50%;
  left: 50%;
  margin-left: -25px;
  margin-top: -25px;
  position: absolute;
}

.mk-ld-overlay .bubble-1,
.mk-ld-overlay .bubble-2 {
  width: 100%;
  height: 100%;
  border-radius: 50%;
  background-color: #00c9c9;
  opacity: 0.6;
  position: absolute;
  top: 0;
  left: 0;
  animation: mk-bubble 2s infinite ease-in-out;
}

.mk-ld-overlay .bubble-2 {
  animation-delay: -1s;
}

@keyframes mk-bubble {
  0%, 100% {
    transform: scale(0);
  }

  50% {
    transform: scale(1);
  }
}

.mk-ld-overlay.bar .bar-inner {
  background-color: #5c738a;
  bottom: 0;
  height: 6px;
  position: absolute;
  width: 100%;
}

.mk-ld-overlay.bar .bar-inner .bar {
  content: "";
  display: inline;
  position: absolute;
  width: 0;
  height: 100%;
  left: 50%;
  text-align: center;
}

.mk-ld-overlay.bar .bar-inner .bar:nth-child(1) {
  background-color: #00c9c9;
  animation: mk-bar 2s linear infinite;
}

.mk-ld-overlay.bar .bar-inner .bar:nth-child(2) {
  background-color: #00c9c9;
  animation: mk-bar 2s linear 1s infinite;
}

@keyframes mk-bar {
  from {
    left: 50%;
    width: 0;
    z-index: 100;
  }

  33.3333% {
    left: 0;
    width: 100%;
    z-index: 10;
  }

  to {
    left: 0;
    width: 100%;
  }
}

.mk-sm-trigger {
  border: 1px solid #44576b;
}

.mk-sm-trigger:before {
  font-size: 2rem;
  top: 3px;
}

.mk-sm-input {
  padding: 5px 10px;
}

.mk-sm-option,
.mk-sm-optgroup {
  font-size: 100%;
}

/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */